name: Synth NineChronicles.SeasonPass CDK Stack

#  https://github.com/actions/runner/issues/1490
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      KMS_KEY_ID:
        required: true
      JWT_TOKEN_SECRET:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  synth:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      url: ${{ steps.deployment.outputs.SERVICE_HOST }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-in-project: true

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install
          yarn add aws-cdk

      - name: Build API Layer
        run: |
          pushd season_pass
          poetry export --with=api --without-hashes -o requirements.txt
          pip install -r requirements.txt -t layer/python/lib/python3.11/site-packages/
          popd

      - name: Build Worker Layer
        run: |
          pushd worker
          poetry export --with=worker --without-hashes -o requirements.txt
          pip install -r requirements.txt -t layer/python/lib/python3.11/site-packages/
          popd

      - name: Synth stack
        env:
          STAGE: ${{ vars.STAGE }}
          REGION_NAME: ${{ vars.REGION_NAME }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          KMS_KEY_ID: ${{ secrets.KMS_KEY_ID }}
          JWT_TOKEN_SECRET: ${{ secrets.JWT_TOKEN_SECRET }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          source $VENV
          yarn cdk synth

  slack_notification:
    uses: ./.github/workflows/slack_message.yml
    needs: synth
    if: ${{ failure() }}
    with:
      success: false
      environment: ${{ inputs.environment }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
