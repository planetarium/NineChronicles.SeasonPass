"""Models for multi pass

Revision ID: 8b92be10e129
Revises: c3c5e9c8ff0f
Create Date: 2024-10-23 16:50:57.175447

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8b92be10e129'
down_revision: Union[str, None] = 'c3c5e9c8ff0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


pass_type_enum = postgresql.ENUM(*("COURAGE_PASS", "ADVENTURE_BOSS_PASS", "WORLD_CLEAR_PASS"), name="passtype")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass_type_enum.create(op.get_bind(), checkfirst=False)

    # FIXME: season_pass_id of claim should be to exist.
    #  But we cannot automatically find prev. claims' season_pass_id in migration code.
    #  TODO: Set all prev. claims' season_pass_id and set it to not-null column.
    op.add_column('claim', sa.Column('season_pass_id', sa.Integer(), nullable=True))
    op.create_foreign_key("claim_season_pass_id_fkey", 'claim', 'season_pass', ['season_pass_id'], ['id'])
    op.add_column('season_pass', sa.Column('pass_type', pass_type_enum, server_default='COURAGE_PASS', nullable=False))
    op.alter_column('season_pass', 'start_timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('season_pass', 'end_timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('season_pass', 'end_timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('season_pass', 'start_timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_column('season_pass', 'pass_type')
    op.drop_constraint("claim_season_pass_id_fkey", 'claim', type_='foreignkey')
    op.drop_column('claim', 'season_pass_id')
    pass_type_enum.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
